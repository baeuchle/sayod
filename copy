#!/bin/bash

exec_dir=$(dirname $0)
if [ "$(which notify-send)" == "" ]; then
    echo "Kann notify-send nicht finden, bitte installieren";
    exit 127
fi

function cleanup {
    for part in target source; do
        clean_cmd=$($config --section $part --key release --emptydefault)
        if [ ! -z "$clean_cmd" ]; then
            $clean_cmd
        fi
    done
}
trap cleanup EXIT

function notify {
    msgdate="$(date +%Y-%m-%dT%H:%M:%S)"
    msg=""
    level=$1
    shift
    case "$level" in
        FAIL) # Fehler beim Ausführen
            subject="FAIL"
            urgency="critical"
            head="Backup: Fehler $msgdate"
        ;;
        FATAL) # Fehler im Script / Konfiguration
            subject="WTF!"
            urgency="critical"
            head="Backup-Fehler (Fatal)"
        ;;
        START)
            subject="START"
            urgency="low"
            head="Starte Backup"
            msg="$msgdate"
        ;;
        SUCCESS)
            subject="SUCCESS"
            urgency="low"
            head="Backup: Erfolg"
        ;;
        *)
            subject="$1"
            shift
        ;;
    esac
    msg="$* $msg"
    notify-send -u $urgency "$head" "$msg"
    logcmd=$($config --section notify --key log --default cat)
    logpipe=$($config --section notify --key pipe --emptydefault)
    logmsg="$msgdate $subject $msg"
    if [ "$logpipe" == "yes" ]; then
        echo "$logmsg" | $logcmd
    else
        $logcmd "$logmsg"
    fi
}

config_dir="$($exec_dir/config_dir)"
if [ "$?" -ne "0" ] || [ -z "$config_dir" ]; then
    notify FATAL "Kann Konfigurationsverzeichnis nicht bestimmen"
    exit 127;
fi

rc=rc.ini
while [ $# -gt 0 ]; do
    case "$1" in
        --config)
            shift;
            if [[ ! -z "$1" ]]; then
                rc=$1
            fi
            shift;
        ;;
        *)
            shift;
        ;;
    esac
done
config="$exec_dir/config.py --path $config_dir --file $rc"
if ! $config --help > /dev/null 2>&1; then
    notify FATAL "Konfigurationsscript kann nicht gestartet werden"
    exit 127;
fi

notify START "Starte Backup"

# This part should do the actual copying.
source=$($config --section source --key path)
if [ "$?" -ne "0" ] || [ -z "$source" ]; then
    notify FATAL "Kann Quellpfad nicht bestimmen (sollte in source::path stehen)"
    exit 127;
fi
target=$($config --section target --key path)
if [ "$?" -ne "0" ] || [ -z "$target" ]; then
    notify FATAL "Kann Zielpfad nicht bestimmen (sollte in target::path stehen)"
    exit 127;
fi
exclude_file=$($config --section source --key exclude_file)
if [ "$?" -ne "0" ] || [ -z "$exclude_file" ]; then
    notify FATAL "Kann nicht bestimmen, welche Dateien vom Backup ausgeschlossen werden sollen (sollte in source::exclude_file stehen)"
    exit 127;
fi
if [[ $exclude_file != /* ]]; then
    exclude_file=$config_dir$exclude_file
fi
if [ ! -r "$exclude_file" ]; then
    notify FATAL "Kann Datei mit Ausschlussliste nicht lesen\n$exclude_file"
    exit 127;
fi

for part in target source; do
    provide_exe=$($config --section $part --key provide --emptydefault)
    if [ ! -z "$provide_exe" ]; then
        $provide_exe
        if [ "$?" -ne "0" ]; then
            notify FAIL "Konnte Provide-script für $part $provide_exe
            nicht ausführen"
            exit 2
        fi
    fi
done

privilege=$($config --section source --key privilege --emptydefault)
if [[ "$privilege" -ne "sudo" ]]; then
    privilege=""
fi
no_cross=$($config --section source --key no_cross --emptydefault)
if [[ "$no_cross" -ne "-x" ]]; then
    no_cross=""
fi
$privilege \
rsync --partial -a \
        $no_cross \
        --exclude-from=$exclude_file \
        $source \
        $target \
        > $config_dir/rsync.log \
        2> $config_dir/rsync.err
rsync_error=$?

case $rsync_error in
    0)
        notify SUCCESS
        exit 0;;
    23|24)
        notify SUCCESS "Nicht alle Quelldateien konnten gelesen werden";
        exit 0;;
    [1246])
        notify FATAL "rsync usage error";
        exit 1;;
    3|5|10|11|12|13|14|21|22)
        notify FAIL "rsync copy error ($rsync_error)";
        exit 2;;
    25|40|35)
        notify FAIL "rsync other error $rsync_error";
        exit 3;;
    *)
        notify FAIL "Unknown rsync error $rsync_error";
        exit $rsync_error;;
esac
