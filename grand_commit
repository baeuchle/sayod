#!/bin/bash

exec_dir=$(dirname $0)
source $exec_dir/notify.sh

function cleanup {
    true
}
trap cleanup EXIT

rc=rc.ini
temponly=0
nonotify=""
while [ $# -gt 0 ]; do
    case "$1" in
        -c|--config)
            shift;
            if [[ ! -z "$1" ]]; then
                rc=$1
            fi
            shift;
        ;;
        # this is the standard behavior
        -n|--notify)
            shift;
            nonotify=""
        ;;
        # turn off notify-send
        -no-n|--no-notify)
            shift;
            nonotify=1
        ;;
        -q|--quiet)
            shift;
            verbose=""
        ;;
        -v|--verbose)
            shift;
            verbose=1
        ;;
        *)
            shift;
        ;;
    esac
done

source $exec_dir/helpers.sh
source $exec_dir/find_config.sh

# find last tag called stable:
tagname=$($config --section git --key tagname --default stable)
gitdir=$($config --section git --key directory --default $PWD)
gitcmd="git -C $gitdir"

if $gitcmd tag --sort=refname | grep -q ^$tagname$; then
    verbose_echo "Resetting to tag $tagname"
    $gitcmd reset --soft "$tagname";
    if $gitcmd status --porcelain | grep -qv ^??; then
        msg=$($config --section git --key grand_message --default "Grand backup")
        dateformat="$($config --section git --key grand_date --emptydefault)"
        if [ ! -z "$dateformat" ]; then
            msg="$msg $(date +"$dateformat")"
        fi
        verbose_echo "Committing $msg"
        $gitcmd commit -qm "$msg"
    else
        verbose_echo "No changes"
    fi
    $gitcmd tag -d $tagname > /dev/null; # not interested in success notification
fi

verbose_echo "Creating new tag $tagname"
$gitcmd tag $tagname
for orig in $($config --section git --key origins --default origin); do
    verbose_echo "Pushing to origin $orig"
    $gitcmd push -q $orig master
done

notify SUCCESS "Current commit is $($gitcmd log -1 --format=%H)"
exit 0;
