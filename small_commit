#!/usr/bin/python3

"""Creates a small git commit"""

import argparse
from datetime import datetime
from pathlib import Path
from gitversion import Git
from config import Config
from notify import Notify
import log

sclog = log.get_logger('small_commit')

def make_small_commit(conf, gitobj, notifier, addables):
    for pattern in conf.find('git', 'add', '').split():
        path = Path(pattern)
        addables.extend(path.parent.glob(path.name))
    for curr_file in addables:
        sclog.info("Adding %s", curr_file)
        gitobj.command('add', curr_file)
    if conf.find('git', 'add_all', False):
        sclog.info("Adding all tracked files")
        gitobj.command('add', '-u')

    if gitobj.there_are_untracked_files():
        msg = conf.find('git', 'small_message', 'small backup').format(datetime.now())
        sclog.info("Commiting %s", msg)
        gitobj.command('commit', '-qm', msg)

    notifier.success("Current commit is", gitobj.hash())

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="""Creates a small commit""")
    parser.add_argument('--add', '-a',
        action='append',
        required=False,
        default=[]
    )
    Config.add_options(parser)
    log.add_options(parser)
    Notify.add_options(parser)
    args = parser.parse_args()

    sclog = log.get_logger('small_commit', args)
    config = Config.get_config(args)
    notify = Notify(config, show=args.notification_show)
    git = Git(config.find('git', 'directory', Path.cwd()))

    make_small_commit(config, git, notify, args.add)
    raise SystemExit(0)
